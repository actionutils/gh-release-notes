name: Release

on:
  push:
    branches:
      - main  # Only run on main branch pushes (PR merges)
  pull_request:
    types: [ opened, synchronize, reopened, labeled, unlabeled ]

permissions: {}

jobs:
  release-pr:
    permissions:
      contents: write
      pull-requests: write
      issues: write
      statuses: write
    runs-on: ubuntu-latest
    outputs:
      release_pr: ${{ toJSON(steps.release-pr.outputs) }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actionutils/trusted-tag-verifier@95f88dda1c54c11d1ad9428998be8b068443fa07 # v0.5.1
        with:
          verify: 'actionutils/create-release-pr'
      - uses: actionutils/create-release-pr@v0
        id: release-pr
        with:
          skip-release-notes: true # Use gh-release-notes instead

  update-release-pr:
    needs: [release-pr]
    if: fromJSON(needs.release-pr.outputs.release_pr).state == 'release_pr_open'
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.release-notes.outputs.notes }}
    permissions:
      contents: write
      pull-requests: write
      id-token: write # Required for OIDC token exchange
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@v5
        with:
          ref: ${{ fromJSON(needs.release-pr.outputs.release_pr).pr_branch }}
          persist-credentials: false

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - run: bun install

      - id: release-notes
        env:
          PREV_TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).current_tag }}
          TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).next_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NOTES=$(bun run dev --repo "$GITHUB_REPOSITORY" \
            --target main \
            --prev-tag "$PREV_TAG" \
            --tag "$TAG" \
            --verbose \
            --preview)
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Verify actionutils/sticky-comment
        uses: actionutils/trusted-tag-verifier@95f88dda1c54c11d1ad9428998be8b068443fa07 # v0.5.1
        with:
          verify: 'actionutils/sticky-comment'

      - name: Post release notes
        if: steps.release-notes.outputs.notes != ''
        uses: actionutils/sticky-comment@v1
        with:
          key: 'release-notes'
          number: ${{ fromJSON(needs.release-pr.outputs.release_pr).pr_number }}
          body: |
            ## Release Notes (default)
            <hr>

            ${{ steps.release-notes.outputs.notes }}

      - id: release-notes-table
        env:
          PREV_TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).current_tag }}
          TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).next_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NOTES=$(bun run dev --repo "$GITHUB_REPOSITORY" \
            --target main \
            --prev-tag "$PREV_TAG" \
            --tag "$TAG" \
            --template ./templates/table.md.jinja \
            --verbose \
            --preview)
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post release notes (table)
        if: steps.release-notes-table.outputs.notes != ''
        uses: actionutils/sticky-comment@v1
        with:
          key: 'release-notes-table'
          number: ${{ fromJSON(needs.release-pr.outputs.release_pr).pr_number }}
          body: |
            ## Release Notes (Table ver.)
            <hr>

            ${{ steps.release-notes-table.outputs.notes }}

      # Post Dependency Review
      - uses: actions/dependency-review-action@v4
        if: fromJSON(needs.release-pr.outputs.release_pr).current_tag != ''
        id: dependency-review
        with:
          base-ref: ${{ fromJSON(needs.release-pr.outputs.release_pr).current_tag }}
          head-ref: main
      - name: Post sticky comment
        if: fromJSON(needs.release-pr.outputs.release_pr).current_tag != ''
        uses: actionutils/sticky-comment@v1
        with:
          key: 'dep-review'
          number: ${{ fromJSON(needs.release-pr.outputs.release_pr).pr_number }}
          body: |
            ${{ steps.dependency-review.outputs.comment-content }}

            <details>
              <summary>Dependency Changes (JSON)</summary>
              <pre>${{ toJSON(fromJSON(steps.dependency-review.outputs.dependency-changes)) }}</pre>
            </details>

      - uses: actionutils/trusted-tag-verifier@95f88dda1c54c11d1ad9428998be8b068443fa07 # v0.5.1
        with:
          verify: 'actionutils/commit-or-rewrite'

      - name: Update package version
        if: fromJSON(needs.release-pr.outputs.release_pr).next_tag != ''
        env:
          VERSION: ${{ fromJSON(needs.release-pr.outputs.release_pr).next_tag }}
        run: |
          VERSION_NO_V="${VERSION#v}"
          bun pm version "${VERSION_NO_V}" --no-git-tag-version --allow-same-version
      - uses: actionutils/commit-or-rewrite@v0
        if: fromJSON(needs.release-pr.outputs.release_pr).next_tag != ''
        with:
          commit_message: "chore: Bump version to ${{ fromJSON(needs.release-pr.outputs.release_pr).next_tag }}"
          id: bump-package-version
          branch: ${{ fromJSON(needs.release-pr.outputs.release_pr).pr_branch }}
          files: |
            package.json

      # Test goreleaser
      - uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f # v2.0.5
      - uses: sigstore/cosign-installer@v3.9.2 # installs cosign
      - uses: anchore/sbom-action/download-syft@v0.20.6 # installs syft
      - uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          version: '~> v2'
          args: release --clean --draft --snapshot --skip publish
      - uses: actions/upload-artifact@v4
        with:
          name: snapshot
          path: ./dist

  generate-release-notes:
    needs: [release-pr]
    if: fromJSON(needs.release-pr.outputs.release_pr).state == 'release_required'
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.release-notes.outputs.notes }}
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - run: bun install

      - id: release-notes
        env:
          PREV_TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).current_tag }}
          TAG: ${{ fromJSON(needs.release-pr.outputs.release_pr).next_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NOTES=$(bun run dev --repo "$GITHUB_REPOSITORY" \
            --target main \
            --prev-tag "$PREV_TAG" \
            --template ./templates/table.md.jinja \
            --tag "$TAG")
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  verify-releaser:
    needs: [release-pr]
    if: fromJSON(needs.release-pr.outputs.release_pr).state == 'release_required'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - name: Verify Trusted Tag Releaser
        uses: actionutils/trusted-tag-verifier@95f88dda1c54c11d1ad9428998be8b068443fa07 # v0.5.1
        with:
          verify: 'actionutils/trusted-go-releaser@v1'

  release:
    needs: [verify-releaser, generate-release-notes, release-pr]
    if: fromJSON(needs.release-pr.outputs.release_pr).state == 'release_required'
    permissions:
      id-token: write    # Required for signed tags
      contents: write    # Required for release and tag creation
      pull-requests: write # Required for bumpr commenting
      attestations: write # Required for build provenance attestation
      actions: read      # Required for SLSA generator
    uses: actionutils/trusted-go-releaser/.github/workflows/trusted-release-workflow.yml@v1
    with:
      environment: release
      setup-bun: true
      release-notes: ${{ needs.generate-release-notes.outputs.release_notes }}

  publish:
    needs: [release-pr, release]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC token exchange
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - uses: actions/checkout@v5
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version-file: .bun-version
    - run: bun install
    - run: bun run build
    # Use npm publish for trusted publishing until bun publish suppports it.
    # ref: https://github.com/oven-sh/bun/issues/15601
    # Require npm version >= 11.5.1 for trusted publishing
    - uses: actions/setup-node@v5
      with:
        node-version: 24
    - run: npm --version
    - run: npm publish
